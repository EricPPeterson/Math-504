## math 504
## hw 4
require(Matrix)
require(MASS)

##prob 2
## part b
options(digits = 16)
n <- seq(from = 1, to = 17, by = 1)
a <- 10^n
theta <- 0
D <- matrix(data = c(a[1],0,0,1), nrow = 2, ncol = 2)
Q <- matrix(data = c(cos(theta), sin(theta),-sin(theta),cos(theta)), nrow = 2, ncol = 2)
Qt <- t(Q)
M <- Q %*% D %*% Qt
res <- matrix(data = NA, nrow = length(n), ncol = 2)
kappa.def <- matrix(data = NA, nrow = length(n), ncol = 1)
kappa.func <- matrix(data = NA, nrow = length(n), ncol = 1)

##part c
theta <- pi/4


##by hand part
hand <- matrix(data = NA, nrow = 17, ncol = 2)

##part i
for(i in 1:length(n)){
  
  ## using solve
  y <- matrix(data = c(cos(theta), sin(theta)), nrow = 2, ncol = 1)
  D <- matrix(data = c(a[i],0,0,1), nrow = 2, ncol = 2)
  M <- Q %*% D %*% Qt
  res[i,] <- solve(M, y, tol = 10^-20)
  
  ## by hand
  x.11 <- cos(theta)^2 + a[i] * sin(theta)^2
  x.21 <- cos(theta) * sin(theta) - a[i] * cos(theta) * sin(theta)
  x.12 <- cos(theta) * sin(theta) - a[i] * cos(theta) * sin(theta)
  x.22 <- a[i] * cos(theta)^2 + sin(theta)^2
  M.inv <- a[i]^-1 * matrix(data = c(x.11,x.21,x.12,x.22), nrow = 2, ncol = 2)
  hand[i,] <- M.inv %*% y 
  
  ##calc condition numbers
  kappa.def[i,] <- abs(max(eigen(M)$values))/abs(min(eigen(M)$values))
  kappa.func[i,] <- kappa(M)
}


##part ii
kappa.def
kappa.func

## problemm 3
##part a
mat <- matrix(data = c(1,2,2,1), nrow = 2)
eig.val <- max(abs(eigen(mat)$values))
eig.vals <- eigen(mat)$values
eigen.vecs <- eigen(mat)$vectors
diag.vals <- Diagonal(n = 2, x = eig.vals)
any.vec <- matrix(rnorm(6), nrow = 1)
len.1 <- sqrt(sum((any.vec %*% sym.mat)^2))
len.2 <- eig.val * sqrt(sum(any.vec)^2)
len.3 <- sqrt(sum((any.vec %*% diag.vals)^2))

##problem 5
require(TTR)

# get a dataframe with stock name information
stocknames <- stockSymbols(exchange="NYSE")

##uses complete cases to get rid of stocks without data in price
stocknames <- data.frame(stocknames[complete.cases(stocknames),])

## create data frame to hold close prices
## 252 trading days/year
stock.prices <- matrix(data = NA, nrow = 252 * 5, ncol = nrow(stocknames))
colnames(stock.prices) <- t(stocknames[,1])


ClosePrices <- function(Stocks){
  
  for (j in 1:nrow(Stocks)){
    
    ##downloads prices
    prices <- getYahooData(symbol = stocknames[j,1], start = 20080102, end = 20130102, freq = "daily", type = "price")
    
    ## checks to make sure there aren't any NAs
    ## checks to make sure there's a price in every day
    if (nrow(prices) == 252*5){
        close <- as.matrix(prices[,4])
        stock.prices[,j] <- close
    }
    cat(j, "\n")
  }
  
  ## gets rid of colums with NAs for prices
  stock.prices <- as.data.frame(stock.prices)
  st.pr <- stock.prices[,colSums(is.na(stock.prices))<nrow(stock.prices)] 
  
  ##adds XOM as first column
  prices <- getYahooData(symbol = "XOM", start = 20080102, end = 20130102, freq = "daily", type = "price")
  close <- as.data.frame(prices[,4])
  colnames(close) <- c("XOM")
  st.pr <- cbind(close,st.pr)
  return(st.pr)
}

close.pr <- ClosePrices(stocknames)

prices <- getYahooData(symbol = "WTI", start = 20080102, end = 20130102, freq = "daily", type = "price")

write.csv(x = close.pr, file = "C:/Users/eric/Desktop/GTown Stats/math 504/HW4/close_price.csv")

##part c 
## load data for regression
close_price <- read.csv("C:/Users/eric/Desktop/GTown Stats/math 504/HW4/close_price.csv")
crude <- read.csv("C:/Users/eric/Desktop/GTown Stats/math 504/HW4/crude.csv")
colnames(close_price[,1]) <- c("Date") 
a <- as.Date(close_price[,1])
b <- as.Date(crude[,1])

## check trade dates to be sure theyre the same

check_dates <- rep(NA, length(b))
for (check in 1:length(b)){
  if (a[check] == b[check]){
    check_dates[check] = 0
  } else {
    check_dates[check] = 1
  }
}

crude <- crude[-1218, ]


## had to run twice to remove two dates and now both have 1260 observations
## and all the dates are the same.


##create regression dfs
ten.stocks <- cbind(close_price[,1], close_price[,2:11])
hundo.stocks <- cbind(crude$WTI,close_price[,2:101])
twohundo.stocks <- cbind(crude$WTI,close_price[,2:201])
threehundo.stocks <- cbind(crude$WTI,close_price[,2:301])


## create regressions for each required model
start = Sys.time()
predictors.10 <- colnames(ten.stocks[c(2:11)])
response.10 <- colnames(ten.stocks[c(1)])
lm.ten <- lm(ten.stocks[,response.10] ~., ten.stocks[,predictors.10])
lm.ten.2 <- anova(lm.ten)
one = Sys.time() - start

start = Sys.time()
predictors.100 <- colnames(hundo.stocks[c(2:101)])
response.100 <- colnames(hundo.stocks[c(1)])
lm.hunj <- lm(hundo.stocks[,response.100] ~., hundo.stocks[,predictors.100])
two = Sys.time() - start

start = Sys.time()
predictors.200 <- colnames(twohundo.stocks[c(2:201)])
response.200 <- colnames(twohundo.stocks[c(1)])
lm.2hunj <- lm(twohundo.stocks[,response.200] ~., twohundo.stocks[,predictors.200])
three = Sys.time() - start

start = Sys.time()
predictors.300 <- colnames(threehundo.stocks[c(2:11)])
response.300 <- colnames(threehundo.stocks[c(1)])
lm.3hunj <- lm(threehundo.stocks[,response.300] ~., threehundo.stocks[,predictors.300])
four = Sys.time() - start

##create aTa matricies
aTa.10 <- as.matrix(t(ten.stocks[,2:11])) %*% as.matrix(ten.stocks[,2:11]) 
aTa.100 <- as.matrix(t(hundo.stocks[,2:101])) %*% as.matrix(hundo.stocks[,2:101])
aTa.200 <- as.matrix(t(twohundo.stocks[,2:201])) %*% as.matrix(twohundo.stocks[,2:201])
aTa.300 <- as.matrix(t(threehundo.stocks[,2:301])) %*% as.matrix(threehundo.stocks[,2:301])

##calculate the normal equations
norm.10 <- ginv(as.matrix(t(ten.stocks[,2:11])) %*% as.matrix(ten.stocks[,2:11])) %*% (as.matrix(t(ten.stocks[,2:11])) %*% as.matrix(ten.stocks[,1]))
norm.100 <- ginv(as.matrix(t(hundo.stocks[,2:101])) %*% as.matrix(hundo.stocks[,2:101])) %*% (as.matrix(t(hundo.stocks[,2:101])) %*% as.matrix(hundo.stocks[,1])) 
norm.200 <- ginv(as.matrix(t(twohundo.stocks[,2:201])) %*% as.matrix(twohundo.stocks[,2:201])) %*% (as.matrix(t(twohundo.stocks[,2:201])) %*% as.matrix(twohundo.stocks[,1]))
norm.300 <- ginv(as.matrix(t(threehundo.stocks[,2:301])) %*% as.matrix(threehundo.stocks[,2:301])) %*% (as.matrix(t(threehundo.stocks[,2:301])) %*% as.matrix(threehundo.stocks[,1]))


## condition numbers of matricies
kappa.10 <- kappa(aTa.10) #[1] 47761.0871980549
kappa.100 <- kappa(aTa.100) #[1] 4239793.973201738
kappa.200 <- kappa(aTa.200) #[1] 73077487.36486927
kappa.300 <- kappa(aTa.300) #[1] 122693107.0928872
